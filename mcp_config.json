{
  "project_name": "E11EVEN Central Platform",
  "project_description": "Centralized learning and communication platform for E11EVEN",
  "frontend": {
    "framework": "Next.js 15+",
    "ui_library": "Tailwind CSS",
    "state_management": ["React Context", "React Query"],
    "form_handling": "React Hook Form + Zod",
    "components": {
      "ui": ["Custom UI components"],
      "auth": ["Login", "Registration", "Password Reset"],
      "dashboard": ["Dashboard components", "SuperAdmin Dashboard components"],
      "profile": ["Profile management components"],
      "program": ["Learning program components"],
      "connect": ["Connect messaging components"],
      "error_handling": ["ErrorBoundary", "ClientErrorBoundary"]
    },
    "routing": "App Router (Next.js 15+)",
    "styling": {
      "frameworks": ["Tailwind CSS", "tailwindcss-animate"],
      "theming": "next-themes"
    },
    "image_handling": {
      "missing_thumbnails": "Graceful fallbacks with themed placeholders",
      "upload_strategies": ["Supabase Storage", "Data URL fallback"]
    }
  },
  "backend": {
    "api_framework": "Next.js API routes",
    "api_routes": {
      "auth": ["Login", "Logout", "Refresh", "Password Reset", "SuperAdmin checks"],
      "dev_actions": ["Development utilities"],
      "diagnostics": ["System health checks"],
      "env_check": ["Environment validation"],
      "learning": ["Program management", "Department management", "Course assignments", "Program archiving"]
    },
    "server_components": "Next.js Server Components",
    "auth_method": "JWT (refresh token rotation)",
    "database": "Supabase (PostgreSQL)",
    "middleware": ["Authentication", "Validation", "Logging", "SuperAdmin Permission Check"],
    "error_handling": {
      "strategy": "Centralized error handling with graceful fallbacks",
      "logging": "Structured logging with environment-aware levels",
      "user_data_resilience": "Fallback to minimal permissions on database errors"
    },
    "permission_handling": {
      "approach": "Direct role-based checks",
      "fallback_behavior": "Default deny",
      "minimal_db_dependency": "Avoid complex joins and preference lookups in critical paths",
      "strategies": [
        "Direct role check from users table",
        "Secondary check from user_roles table",
        "Avoid permission-utils abstraction for critical operations"
      ]
    }
  },
  "database": {
    "primary": "PostgreSQL",
    "host": "Supabase",
    "tables": {
      "core": [
        {"name": "users", "description": "User accounts", "foreign_keys": ["auth.users"], "notes": "Contains essential user fields - no preferences column, use user_preferences table instead"},
        {"name": "user_preferences", "description": "User app preferences", "foreign_keys": ["users"], "notes": "All user preference/permission data should go here, NOT in users table"},
        {"name": "roles", "description": "Available system roles", "foreign_keys": []},
        {"name": "permissions", "description": "Permission definitions", "foreign_keys": []},
        {"name": "user_roles", "description": "User role assignments", "foreign_keys": ["users", "roles", "departments", "venues"]},
        {"name": "role_permissions", "description": "Assignment of permissions to roles", "foreign_keys": ["roles", "permissions"]}
      ],
      "learning": [
        {"name": "departments", "description": "Organizational departments", "foreign_keys": []},
        {"name": "programs", "description": "Training programs", "foreign_keys": ["departments"], "required_fields": ["status", "updated_at", "updated_by"]},
        {"name": "program_departments", "description": "Associative table linking programs and departments", "foreign_keys": ["programs", "departments"]},
        {"name": "courses", "description": "Courses within programs", "foreign_keys": ["programs"], "optional_fields": ["thumbnail_url"], "required_fields": ["sequence_order", "status"]},
        {"name": "modules", "description": "Course modules", "foreign_keys": ["courses"]},
        {"name": "lessons", "description": "Module lessons", "foreign_keys": ["modules"]},
        {"name": "quiz_questions", "description": "Assessment questions", "foreign_keys": ["modules"]},
        {"name": "quiz_answers", "description": "Question answer options", "foreign_keys": ["quiz_questions"]}
      ],
      "progress": [
        {"name": "user_progress", "description": "Lesson completion status", "foreign_keys": ["users", "modules"]},
        {"name": "user_quiz_attempts", "description": "Quiz attempt records", "foreign_keys": ["users", "modules"]},
        {"name": "user_program_progress", "description": "Program completion tracking", "foreign_keys": ["users", "programs"]}
      ],
      "messaging": [
        {"name": "conversations", "description": "Messaging threads", "foreign_keys": ["users"]},
        {"name": "messages", "description": "Individual messages", "foreign_keys": ["users", "conversations"]},
        {"name": "conversation_members", "description": "Conversation participants", "foreign_keys": ["users", "conversations"]},
        {"name": "attachments", "description": "Message attachments", "foreign_keys": ["messages", "users"]}
      ]
    },
    "security": {
      "row_level_security": true,
      "policies": [
        "Users can view conversations they belong to",
        "Users can create conversations",
        "Users can view messages in their conversations",
        "Users can send messages to conversations they belong to",
        "Users can see members of their conversations",
        "Users can manage their own conversation membership",
        "Users can view attachments in their conversations",
        "Users can upload attachments to their conversations",
        "Authenticated users can upload/delete images in storage"
      ]
    }
  },
  "integrations": {
    "auth": {
      "supabase_auth": {
        "features": ["JWT", "Refresh token rotation", "Session management"],
        "auth_patterns": {
          "api_route_handlers": "createRouteHandlerClient() with auth.getUser()",
          "client_components": "createClient() with auth.getUser()"
        }
      }
    },
    "storage": {
      "supabase_storage": {
        "features": ["File uploads", "Secure access control", "Thumbnails", "Image uploads/deletion via authenticated roles"],
        "buckets": ["course-thumbnails", "course_thumbnails", "thumbnails", "images", "avatars", "public", "courses"],
        "fallback_strategy": "Data URL conversion when buckets unavailable"
      }
    }
  },
  "best_practices": {
    "user_data_handling": "Always fetch only essential columns and handle missing data gracefully",
    "image_uploads": "Try multiple buckets with clear user feedback on failures",
    "error_handling": "Provide graceful fallbacks rather than failing completely",
    "database_schema": "Keep preferences in user_preferences table, not in users table",
    "optional_columns": "Use conditional inclusion of fields like thumbnail_url",
    "permissions": "Use simple direct role checks instead of complex permission utilities for critical operations",
    "nextjs_patterns": "Use useParams() hook for client components instead of passing params as props",
    "api_design": "Keep API routes simple with minimal dependencies on complex abstractions"
  },
  "latest_update": "2024-05-27"
}